name: Publish

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:
    inputs:
      package:
        description: Package to be published to test.pypi.org
        required: true
        type: string
      skip-juju:
        description: Skip Juju integration tests
        required: false
        type: boolean

jobs:
  unify-inputs:
    runs-on: ubuntu-latest
    outputs:
      include: ${{ steps.main.outputs.include }}
      skip-juju:  ${{ steps.main.outputs.skip-juju }}
      repository-url:  ${{ steps.main.outputs.repository-url }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Install uv
        uses: astral-sh/setup-uv@v6
      - id: main
        run: uv run --no-project --script .github/unify-publish-inputs.py

  tests:
    needs: unify-inputs
    if: ${{ needs.unify-inputs.outputs.include != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.unify-inputs.outputs.include) }}
    uses: ./.github/workflows/tests.yaml
    with:
      package: ${{ matrix.package }}
      skip-juju: true

  build-n-publish:
    needs: [unify-inputs,tests]
    if: ${{ needs.unify-inputs.outputs.include != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.unify-inputs.outputs.include) }}
    name: Build and publish ${{ matrix.package }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      attestations: write
      contents: write  # needed to push tag
    steps:
      - uses: actions/checkout@v5
      - name: Install uv
        uses: astral-sh/setup-uv@v6
      - name: Build
        run: uv build
        working-directory: ./${{ matrix.package }}
      - name: Attest build provenance
        uses: actions/attest-build-provenance@v3.0.0
        with:
          subject-path: '${{ matrix.package }}/dist/*'
      #- name: Publish
      #  uses: pypa/gh-action-pypi-publish@release/v1
      #  with:
      #    packages-dir: ./${{ matrix.package }}/dist/
      #    repository-url: ${{ needs.unify-inputs.outputs.repository-url }}
      #    verbose: true
      - name: Tag
        if: ${{ matrix.tag }}
        run: |
          set -xueo pipefail
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag ${{ matrix.tag }}
          git push origin ${{ matrix.tag }}
